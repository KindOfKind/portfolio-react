{"version":3,"sources":["MainScreen/MainScreen.module.css","Header/Header.module.css","ContentSectionsBar/ContentIcon/ContentIcon.module.css","ContentSectionsBar/SectionContentBar/SectionContentBar.module.css","Resume/Resume.module.css","ContentSectionsBar/ContentSectionsBar.module.css","ContentSectionsBar/SectionContentBar/SectionContentBar.jsx","ContentSectionsBar/ContentIcon/ContentIcon.jsx","ContentSectionsBar/ContentSectionsBar.jsx","Header/Header.jsx","MainScreen/MainScreen.jsx","Resume/Resume.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","defaultContainer","container","screen","videoScreen","content","separator","prompt","navButtons","image","dummy","background","youtubeVideoContainer","ShowWithDelay","subContainer","SectionContentBar","props","_useState","useState","_useState2","Object","slicedToArray","imagesList","setImagesList","_useState3","_useState4","timer","setTimer","_useState5","_useState6","canSwitchScreen","setCanSwitchScreen","_useState7","top","left","width","opacity","_useState8","containerStyle","setContainerStyle","useEffect","state","position","newWidth","images","length","concat","prompts","map","imgSrc","index","react_default","a","createElement","className","styles","style","backgroundImage","key","onClick","e","video","pasteIndex","indexOf","fullImage","slice","rect","target","getBoundingClientRect","switchMainScreen","height","setTimeout","switchScreenHandler","videos","onMouseEnter","updateHeaderInfo","onMouseLeave","clearTimeout","onSectionBarHover","objectSpread","onSectionBarBlur","ContentIcon","isContentBarHovered","isSectionBarHovered","barsState","setBarsState","shouldCloseContent","setShouldCloseContent","onIconHoverHandler","showSectionContent","imagesSources","videosSources","section","title","ContentSectionsBar","Header","isHeaderHidden","headerInfo","href","hideMainScreen","react_router_dom","to","MainScreen","nonDisplayState","isActive","transition","zIndex","screen1Info","setScreen1Info","screen2Info","setScreen2Info","videoStyle","setVideoStyle","_useState9","_useState10","videoSrc","setVideoSrc","screen1Style","screen2Style","rectStyle","toggleHeader","screen1","src","screen2","autoPlay","muted","loop","Resume","alt","App","defaultMainScreenData","mainScreenData","setMainScreenData","setHeaderInfo","arguments","undefined","data","headerPrompt","basename","react_router","render","_ref","location","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.cfcbb812.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultContainer\":\"MainScreen_defaultContainer__2UgOk\",\"container\":\"MainScreen_container__3vnb2\",\"screen\":\"MainScreen_screen__3TcPj\",\"videoScreen\":\"MainScreen_videoScreen__35cx1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__pLHfn\",\"content\":\"Header_content__2Ywy_\",\"separator\":\"Header_separator__2nB6V\",\"prompt\":\"Header_prompt__QeZFM\",\"navButtons\":\"Header_navButtons__POcyw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContentIcon_container__1Esdx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SectionContentBar_container__3eCet\",\"image\":\"SectionContentBar_image__TFojn\",\"dummy\":\"SectionContentBar_dummy__3DS8O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Resume_container__2oFIr\",\"background\":\"Resume_background__16YEO\",\"youtubeVideoContainer\":\"Resume_youtubeVideoContainer__1mVeO\",\"ShowWithDelay\":\"Resume_ShowWithDelay__Gy7yi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContentSectionsBar_container__3qEGq\",\"subContainer\":\"ContentSectionsBar_subContainer__V2AeX\"};","import React, { useEffect, useState } from 'react'\r\nimport styles from './SectionContentBar.module.css'\r\n\r\nexport default function SectionContentBar(props) {\r\n    const [imagesList, setImagesList] = useState([]);\r\n    const [timer, setTimer] = useState();\r\n    const [canSwitchScreen, setCanSwitchScreen] = useState(true);\r\n\r\n    const [containerStyle, setContainerStyle] = useState({\r\n        top: '0px',\r\n        left: '0px',\r\n        width: '0px',\r\n        opacity: '0'\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (props.state) {\r\n            const position = props.state.position;\r\n            const newWidth = props.state.images.length * 100;\r\n            setContainerStyle({\r\n                top: `${position.top}px`,\r\n                left: `${position.left}px`,\r\n                width: `${newWidth}px`,\r\n                opacity: '1'\r\n            });\r\n        }\r\n    }, [props.state]);\r\n\r\n\r\n\r\n    const switchScreenHandler = (e, image, video) => {\r\n        let pasteIndex = image.indexOf('.png');\r\n        if (pasteIndex < 0) pasteIndex = image.indexOf('.jpg');\r\n        if (pasteIndex < 0) pasteIndex = image.indexOf('.');\r\n        const fullImage = image.slice(0, pasteIndex) + '-full' + image.slice(pasteIndex, image.length); // Preview image name + postfix \"-full\" = fullHD version of this image\r\n\r\n        if (canSwitchScreen) {\r\n            const rect = e.target.getBoundingClientRect();\r\n            props.switchMainScreen({height: '100px', width: '200px', left: `${rect.left}px`, top: `${rect.top}px`}, fullImage, video);\r\n            setCanSwitchScreen(false);\r\n            setTimeout(() => {\r\n                setCanSwitchScreen(true);\r\n            }, 1000) // Open image animation time\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        //setImagesList(props.state.images.map((src, index) => <img src={src} key={index}/>))\r\n        const prompts = props.prompts// Ad Hoc to avoid wrong indexing :_)\r\n\r\n        setImagesList(props.state.images.map((imgSrc, index) =>\r\n        <div className={styles.image} style={{ backgroundImage: `url(${imgSrc})` }} key={index}\r\n            onClick={(e) => switchScreenHandler(e, imgSrc, props.state.videos[index])}\r\n            onMouseEnter={() => props.updateHeaderInfo({prompt: prompts[index]})}\r\n            onMouseLeave={() => props.updateHeaderInfo({prompt: ''})}\r\n            ></div>\r\n            ))\r\n    }, [props.state.images, canSwitchScreen])\r\n\r\n\r\n\r\n    // Prevent this object from being destroied if user hovered it\r\n    const onMouseEnterHandler = () => {\r\n        if (timer) {\r\n            clearTimeout(timer);\r\n            setTimer();\r\n            props.onSectionBarHover();\r\n        }\r\n    }\r\n\r\n    // Wait till the content disappear and destroy this object\r\n    const onMouseLeaveHandler = () => {\r\n        setContainerStyle({ ...containerStyle, width: '0px', opacity: '0' });\r\n        setTimer(setTimeout(() => {\r\n            props.onSectionBarBlur();\r\n        }, 500));\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container} style={containerStyle} onMouseEnter={onMouseEnterHandler} onMouseLeave={onMouseLeaveHandler}>\r\n            <div className={styles.dummy}></div>\r\n            {imagesList}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react'\r\nimport styles from './ContentIcon.module.css'\r\nimport SectionContentBar from '../SectionContentBar/SectionContentBar'\r\n\r\nexport default function ContentIcon(props) {\r\n    const [barsState, setBarsState] = useState({ isContentBarHovered: false, isSectionBarHovered: false, position: { top: '0', left: '0' }, images: [] });\r\n    const [isSectionBarHovered, setIsSectionBarHovered] = useState(false);\r\n    const [shouldCloseContent, setShouldCloseContent] = useState(false);\r\n\r\n    // If props.badVision == true { *set title style with black markup* }\r\n\r\n    const showSectionContent = (e, images, videos) => {\r\n        // if(!e.target.className) return;\r\n        // const isSection = e.target.className.indexOf(\"_section\");\r\n        const rect = e.target.getBoundingClientRect();\r\n        if (images) {\r\n            setBarsState({\r\n                isSectionBarHovered: true,\r\n                position: { top: rect.top - 1, left: rect.left + 100 },\r\n                images, videos\r\n            });\r\n        }\r\n    }\r\n\r\n    const onSectionBarHover = () => {\r\n        setBarsState({ ...barsState, isSectionBarHovered: true });\r\n    }\r\n\r\n    const onSectionBarBlur = () => {\r\n        setBarsState({ ...barsState, isSectionBarHovered: false });\r\n    }\r\n\r\n    const onIconHoverHandler = (e) => {\r\n        showSectionContent(e, props.imagesSources, props.videosSources);\r\n    }\r\n\r\n    const onIconBlurHandler = () => {   // Without the delay onMouseLeave event on SectionContentBar may not have enough time to occur.\r\n        setTimeout(() => {\r\n            setShouldCloseContent(true);\r\n        }, 100)\r\n    }\r\n\r\n    if (shouldCloseContent == true) {\r\n        setShouldCloseContent(false);\r\n        onSectionBarBlur();\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container} onMouseEnter={(e) => onIconHoverHandler(e)} onMouseLeave={onIconBlurHandler}>\r\n            <div className={styles.section}>\r\n                <div className={`${styles.image}`}></div>\r\n                <div className={styles.title}>{props.title}</div>\r\n            </div>\r\n\r\n            {barsState.isSectionBarHovered &&\r\n                <SectionContentBar state={barsState} onSectionBarHover={onSectionBarHover} onSectionBarBlur={onSectionBarBlur}\r\n                    switchMainScreen={props.switchMainScreen} updateHeaderInfo={props.updateHeaderInfo} prompts={props.prompts}/>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react'\r\nimport ContentIcon from './ContentIcon/ContentIcon';\r\nimport styles from './ContentSectionsBar.module.css'\r\nimport SectionContentBar from './SectionContentBar/SectionContentBar'\r\n\r\nexport default function ContentSectionsBar(props) {\r\n    // imagesSources array has to be the same length as videosSources array! Elements of these arrays are related.\r\n    // For example, after opening the second image the second video will be played. \r\n\r\n    return (\r\n        <div className={styles.container}>\r\n\r\n            <div className={styles.subContainer}>\r\n\r\n            <ContentIcon title={'Hell Over Me'}\r\n            \r\n                imagesSources={['videos/prevs/GH_1.png', 'videos/prevs/GH_2.png', 'videos/prevs/GH_3.png', 'videos/prevs/GH_4.png']}\r\n                videosSources={['videos/GH_1.mp4', 'videos/GH_2.mp4', 'videos/GH_3.mp4', 'videos/GH_4.mp4']}\r\n\r\n                prompts={['FPS Rougelike \"Hell Over Me\". Демонстрация сделанных мной ассетов.',\r\n                'Механики передвижения, процедурные анимации, компоненты персонажа с множеством характеристик.',\r\n                'HUD, активация скиллов, сражение с боссом.',\r\n                'Тотем с модификаторами персонажа игрока, анимация перезарядки бонусом.']}\r\n\r\n                switchMainScreen={props.switchMainScreen} updateHeaderInfo={props.updateHeaderInfo}/>\r\n\r\n            <ContentIcon title={'Phantom Art Sequence'}\r\n            \r\n                imagesSources={['videos/prevs/PAS_1.png', 'videos/prevs/PAS_2.png']}\r\n                videosSources={['videos/PAS_1.mp4', 'videos/PAS_2.mp4']}\r\n\r\n                prompts={['Платформер-головоломка PAS. Диалоги, способности, осмотр карты. Ссылка на видео по игре в разделе \"Резюме\".',\r\n                'Противники из первых четырёх уровней.', '', '', '', '', '', '', '', '']}\r\n                \r\n                switchMainScreen={props.switchMainScreen} updateHeaderInfo={props.updateHeaderInfo}/>\r\n\r\n            <ContentIcon title={'IWA'}\r\n            \r\n                imagesSources={['videos/prevs/IWA_1.png', 'videos/prevs/IWA_2.png', 'videos/prevs/IWA_3.png', 'videos/prevs/IWA_4.png']}\r\n                videosSources={['videos/IWA_1.mp4', 'videos/IWA_2.mp4', 'videos/IWA_3.mp4', 'videos/IWA_4.mp4']}\r\n                \r\n                prompts={['Многопользовательский хоррор-шутер Inhuman Woods Action. Первый монстр.',\r\n                'Второй монстр и зомби.',\r\n                'Лут, обмен, открытие дверей карточками, условие победы.',\r\n                'Лобби, смотровая вышка, прожектор, генератор, эмоции, анимации от третьего лица.', '', '', '', '', '', '']}\r\n                \r\n                switchMainScreen={props.switchMainScreen} updateHeaderInfo={props.updateHeaderInfo}/>\r\n\r\n            <ContentIcon title={'Other Games'}\r\n            \r\n                imagesSources={['videos/prevs/MiniGames_1.png', 'videos/prevs/MiniGames_2.png', 'videos/prevs/MiniGames_3.png', 'videos/prevs/Labyrinth_1.png']}\r\n                videosSources={['videos/MiniGames_1.mp4', 'videos/MiniGames_2.mp4', 'videos/MiniGames_3.mp4', 'videos/Labyrinth_1.mp4', '', '', '', '', '']}\r\n                \r\n                prompts={['Мой первый проект на UE4. 3D модель робота, анимации, мини-игра с лазерами.',\r\n                'Мини-игра с пушками, мини-игра с поиском подарков (недоделанная), подсчёт очков команд.',\r\n                'Мини-игра с обезвреживанием бомбы, подбор предметов, инвентарь.',\r\n                'Многопользовательская игра, в которой игроки должны восстановить невидимый лабиринт раньше соперников.', '', '', '', '', '', '']}\r\n                \r\n                switchMainScreen={props.switchMainScreen} updateHeaderInfo={props.updateHeaderInfo}/>\r\n\r\n            <ContentIcon title={'My Drawings'}\r\n            \r\n                imagesSources={['artPictures/MyDrawings.png']}\r\n                videosSources={[]}\r\n                \r\n                prompts={['Мои рисунки.', '', '', '', '', '', '', '', '', '']}\r\n            \r\n            switchMainScreen={props.switchMainScreen} updateHeaderInfo={props.updateHeaderInfo}/>\r\n\r\n\r\n            <ContentIcon title={'My Web App'}\r\n            \r\n                imagesSources={['videos/Site/Main.png', 'videos/Site/Menus.png', 'videos/Site/CardsReview.png',\r\n                'videos/Site/CardsEditing.png', 'videos/Site/Comments.png']}\r\n                videosSources={['videos/Site/Main.mp4', 'videos/Site/Menus.mp4', 'videos/Site/CardsReview.mp4',\r\n                    'videos/Site/CardsEditing.mp4', 'videos/Site/Comments.mp4']}\r\n                \r\n                    prompts={['Моё веб-приложение для изучения языков по манге и комиксам. Просмотр и редактирование карточек со словами и грамматикой.',\r\n                    'Просмотр секций: профиль, изученные карточки, коллекция манги.',\r\n                    'Анимации карточек со словами и грамматикой.',\r\n                    'Открытие манги. Создание прямоугольных областей поверх изображений и добавление к ним карточек.',\r\n                    'Секция с комментариями: добавление комментариев, ответ на сообщения, просмотр чужих профилей.', '', '', '', '', '']}\r\n                \r\n                switchMainScreen={props.switchMainScreen} updateHeaderInfo={props.updateHeaderInfo}/>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport styles from './Header.module.css'\r\nimport { Link, BrowserRouter, HashRouter } from 'react-router-dom'\r\n\r\nexport default function Header(props) {\r\n    if (!props.isHeaderHidden) {\r\n        return (\r\n            <div className={styles.container}>\r\n                <div className={styles.content}>\r\n                    <div className={styles.prompt}>\r\n                        <p>{props.headerInfo.prompt}</p>\r\n                    </div>\r\n\r\n                    <div className={styles.navButtons}>\r\n                        <a href=\"javascript:void(0)\" onClick={props.hideMainScreen}>Обновить плеер</a>\r\n                        <Link to=\"/\">Главная</Link>\r\n                        <Link to=\"/resume\">Резюме</Link>\r\n                    </div>\r\n                </div>\r\n                <div className={styles.separator}></div>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return (<div></div>)\r\n    }\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport styles from './MainScreen.module.css'\r\n\r\nexport default function MainScreen(props) {\r\n    const nonDisplayState = { isActive: false, height: '0px', width: '0px', top: '0px', left: '0px', transition: '0s', zIndex: '0', backgroundImage: [] };\r\n    const [screen1Info, setScreen1Info] = useState(nonDisplayState);\r\n    const [screen2Info, setScreen2Info] = useState(nonDisplayState);\r\n    const [containerStyle, setContainerStyle] = useState({ background: 'linear-gradient(315deg, rgba(16,19,25,1) 50%, rgba(12,24,36,1) 100%)' });\r\n    const [videoStyle, setVideoStyle] = useState({ opacity: '0' });\r\n    const [videoSrc, setVideoSrc] = useState(props.video);\r\n\r\n    const screen1Style = {\r\n        height: screen1Info.height,\r\n        width: screen1Info.width,\r\n        top: screen1Info.top,\r\n        left: screen1Info.left,\r\n        transition: screen1Info.transition,\r\n        zIndex: screen1Info.zIndex\r\n    }\r\n\r\n    const screen2Style = {\r\n        height: screen2Info.height,\r\n        width: screen2Info.width,\r\n        top: screen2Info.top,\r\n        left: screen2Info.left,\r\n        transition: screen2Info.transition,\r\n        zIndex: screen2Info.zIndex\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.updateHeaderInfo({prompt: ''});\r\n    }, []);\r\n\r\n    // Scroll screen up when loading new image\r\n\r\n    useEffect(() => {\r\n        if (!(props.rectStyle.height == '0px' || props.rectStyle.width == '0px')) {  // If trying to open image\r\n            if (!screen1Info.isActive) {\r\n                setVideoStyle({ opacity: '0', transition: '1s' });\r\n                setScreen2Info({ ...screen2Info, zIndex: '0' });\r\n                setScreen1Info({ isActive: true, height: '0px', width: '0px', top: '0px', zIndex: '1', transition: '0s', backgroundImage: props.image });\r\n                setScreen1Info({ isActive: true, height: 'auto', width: '100%', top: '0px', left: '0px', transition: '1s, z-index 0s', zIndex: '1', backgroundImage: props.image });\r\n\r\n                setTimeout(() => {\r\n                    setScreen2Info(nonDisplayState);\r\n                    if (props.video) {\r\n                        setVideoStyle({ opacity: '1', transition: '1s' });\r\n                        setTimeout(() => {\r\n                            setScreen1Info(nonDisplayState);\r\n                        }, 1000)\r\n                    }\r\n                }, 1000);\r\n            }\r\n            else {\r\n                setVideoStyle({ opacity: '0', transition: '1s' });\r\n                setScreen1Info({ ...screen1Info, zIndex: '0' });\r\n                setScreen2Info({ isActive: true, height: '0px', width: '0px', top: '0px', zIndex: '1', transition: '0s', backgroundImage: props.image });\r\n                setScreen2Info({ isActive: true, height: 'auto', width: '100%', top: '0px', left: '0px', transition: '1s, z-index 0s', zIndex: '1', backgroundImage: props.image });\r\n\r\n                setTimeout(() => {\r\n                    setScreen1Info(nonDisplayState);\r\n                    if (props.video) {\r\n                        setVideoStyle({ opacity: '1', transition: '1s' });\r\n                        setTimeout(() => {\r\n                            setScreen2Info(nonDisplayState);\r\n                        }, 1000)\r\n                    }\r\n                }, 1000);\r\n            }\r\n        }\r\n        else {  // If trying to close image (then we should show the default one)\r\n            if (screen1Info.isActive) {\r\n                setScreen1Info({ ...screen1Info, width: '0px', transition: '1s' });\r\n                setTimeout(() => {\r\n                    setScreen1Info(nonDisplayState);\r\n                    setScreen2Info({ isActive: true, height: 'auto', width: '100%', top: '0px', left: '0px', transition: '1s, z-index 0s', zIndex: '1', backgroundImage: '' });\r\n                    setContainerStyle({ background: 'linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(9,9,121,1) 35%, rgba(0,212,255,1) 100%);' })\r\n                }, 1000);\r\n            }\r\n            else {\r\n                setScreen2Info({ ...screen2Info, width: '0px', transition: '1s' });\r\n                setTimeout(() => {\r\n                    setScreen2Info(nonDisplayState);    //backgroundImage: 'MainPageDefault.png'\r\n                    setScreen1Info({ isActive: true, height: 'auto', width: '100%', top: '0px', left: '0px', transition: '1s, z-index 0s', zIndex: '1', backgroundImage: '' });\r\n                }, 1000);\r\n            }\r\n        }\r\n\r\n    }, [props.rectStyle]);\r\n\r\n    // For the video to close smoothly\r\n    useEffect(() => {\r\n        if (props.video == '') {\r\n            setVideoStyle({ opacity: '0', transition: '1s' });\r\n        }\r\n        if (videoSrc.length > 0) {\r\n            setTimeout(() => {\r\n                setVideoSrc(props.video);\r\n                setVideoStyle({ opacity: '1', transition: '1s' });\r\n            }, 1000)    // Open image animation duration\r\n        }\r\n        else {\r\n            setVideoSrc(props.video);\r\n        }\r\n    }, [props.video]);\r\n\r\n    // If you want to hide the header on click\r\n    // useEffect(() => {\r\n    //     if (props.isHeaderHidden == true) {\r\n    //         setContainerStyle({ ...containerStyle, height: '100%' });\r\n    //     }\r\n    //     else if (props.isHeaderHidden == false) {\r\n    //         setContainerStyle({ ...containerStyle, height: 'calc(100% - 60px)' });\r\n    //     }\r\n    // }, [props.isHeaderHidden])\r\n\r\n    // if (screen1Info.backgroundImage == '' && screen2Info.backgroundImage == '' && videoSrc == '') { // Default main screen image\r\n    //     return (\r\n    //         <img className={styles.defaultContainer} src={'./PortfolioMainPage.png'}>\r\n    //     </img>\r\n    //     );\r\n    // }\r\n    return (\r\n        <div className={styles.container} style={containerStyle} onClick={props.toggleHeader}>\r\n            <img className={`${styles.screen} ${styles.screen1}`} style={screen1Style} src={screen1Info.backgroundImage}>\r\n\r\n            </img>\r\n            <img className={`${styles.screen} ${styles.screen2}`} style={screen2Style} src={screen2Info.backgroundImage}>\r\n\r\n            </img>\r\n            <video className={`${styles.screen} ${styles.videoScreen}`} style={videoStyle} src={videoSrc} autoPlay muted loop>\r\n\r\n            </video>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport styles from './Resume.module.css'\r\n\r\nexport default function Resume(props) {\r\n    useEffect(() => {\r\n        props.updateHeaderInfo({prompt: ' '});\r\n    }, []);\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <img className={styles.background} src=\"PortfResumeBG1.png\" alt=\"Фон\" />\r\n\r\n            <div className={styles.youtubeVideoContainer}>\r\n               <a href=\"https://youtube.com/playlist?list=PLENdZm7P-ZaiqD7HuvIX104i4cop8HgNH\" target=\"_blank\">Альбом со всеми видео с главной страницы.</a>\r\n               <br/>\r\n               <a href=\"https://youtu.be/J1ihiuToFOU\" target=\"_blank\">Развлекательный видеоролик по игре PAS.</a>\r\n               <br/>\r\n               <a href=\"neonpawn.itch.io/phantom-art-sequence?password=Neon_ITMO\" target=\"_blank\">PAS на Itch.io.</a>\r\n               <br/>\r\n               <a href=\"https://www.youtube.com/watch?v=9-voy3AOLRM\" target=\"_blank\">Трейлер игры \"Hell Over Me\".</a>\r\n               <br/>\r\n               <a href=\"https://spazrael.itch.io/hell-over-me\" target=\"_blank\">\"Hell Over Me\" на Itch.io.</a>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport ContentSectionsBar from './ContentSectionsBar/ContentSectionsBar';\nimport Header from './Header/Header';\nimport MainScreen from './MainScreen/MainScreen';\nimport { Switch, Route, BrowserRouter as Router, HashRouter } from 'react-router-dom';\nimport Resume from './Resume/Resume';\n\nfunction App() {\n  const defaultMainScreenData = { rectStyle: { height: '0px', width: '0px', top: '0px', left: '0px' }, image: '', video: 'videos/Startup_Overview.mp4' };\n  const [mainScreenData, setMainScreenData] = useState(defaultMainScreenData);\n  const [isHeaderHidden, setIsHeaderHidden] = useState(false);\n  const [headerInfo, setHeaderInfo] = useState( { prompt: 'Здесь отображаются подсказки. Если только у вашего устройства не маленький экран...'} );\n  \n  const switchMainScreen = (rectStyle = defaultMainScreenData, image = '', video = 'videos/Startup_Overview.mp4') => {\n    setMainScreenData({ rectStyle, image, video });\n  }\n\n  const hideMainScreen = () => {\n    setMainScreenData(defaultMainScreenData);\n  }\n\n  const updateHeaderInfo = (data) => {\n    let headerPrompt = data.prompt;\n    if (headerPrompt == '')\n    {\n      headerPrompt = 'Здесь отображаются подсказки. Если только у вашего устройства не маленький экран...';\n    }\n\n    setHeaderInfo({...data, prompt: headerPrompt});\n  }\n\n  const toggleHeader = () => {\n    // Uncomment if you want to hide header by clicking at main window\n    \n    //setIsHeaderHidden(!isHeaderHidden);\n  }\n\n  return (\n    <div className=\"App\" >\n      <HashRouter basename=\"/portfolio-react\">\n      <Header hideMainScreen={hideMainScreen} headerInfo={headerInfo} isHeaderHidden={isHeaderHidden} toggleHeader={toggleHeader} />\n\n        <Route render={({ location }) => (\n          <Switch>\n\n            <Route exact path=\"/\" >\n              <ContentSectionsBar switchMainScreen={switchMainScreen} updateHeaderInfo={updateHeaderInfo}/>\n              <MainScreen rectStyle={mainScreenData.rectStyle} image={mainScreenData.image} video={mainScreenData.video} switchMainScreen={switchMainScreen}\n                isHeaderHidden={isHeaderHidden} toggleHeader={toggleHeader} updateHeaderInfo={updateHeaderInfo}/>\n            </Route>\n\n            <Route path=\"/resume\">\n              <Resume updateHeaderInfo={updateHeaderInfo}/>\n            </Route>\n\n          </Switch>\n        )} />\n      </HashRouter>\n    </div>\n\n\n\n\n\n\n    // <div className=\"App\" >\n    //   <Router>\n    //   <Header hideMainScreen={hideMainScreen} headerInfo={headerInfo} isHeaderHidden={isHeaderHidden} toggleHeader={toggleHeader} />\n\n    //     <Route render={({ location }) => (\n    //       <Switch>\n\n    //         <Route exact path=\"/portfolio-react/\" >\n    //           <ContentSectionsBar switchMainScreen={switchMainScreen} updateHeaderInfo={updateHeaderInfo}/>\n    //           <MainScreen rectStyle={mainScreenData.rectStyle} image={mainScreenData.image} video={mainScreenData.video} switchMainScreen={switchMainScreen}\n    //             isHeaderHidden={isHeaderHidden} toggleHeader={toggleHeader} updateHeaderInfo={updateHeaderInfo}/>\n    //         </Route>\n\n    //         <Route path=\"/portfolio-react/resume\">\n    //           <Resume updateHeaderInfo={updateHeaderInfo}/>\n    //         </Route>\n\n    //       </Switch>\n    //     )} />\n    //   </Router>\n    // </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}